class Solution {
public:
  struct levelQueue {
    TreeNode* root;
    int level;
    levelQueue(TreeNode *root, int level) {
        this->root = root;
        this->level = level;
    }
};
vector<vector<int>> levelOrder(TreeNode* root) {
    vector<vector<int>>ans;
    if (!root) return ans;
    
    queue<levelQueue>qt;
    levelQueue t(root, 0);
    vector<int>a;
    ans.push_back(a);
    qt.push(t);
    while (!qt.empty()) {
        TreeNode *temp = qt.front().root;
        int level = qt.front().level;
        if (ans.size() < level+1) {
            vector<int>a;
            a.push_back(temp->val);
            ans.push_back(a);
        }
        else {
            ans[level].push_back(temp->val);
        }
        
        qt.pop();
        level++;
        if (temp->left) {
            levelQueue t(temp->left, level);
            qt.push(t);
        }
        if (temp->right) {
            levelQueue t(temp->right, level);
            qt.push(t);
        }
    }
    return ans;
}
};
