//Consider this as two house robbing problems alternatively
class Solution {
public:
    int rob(vector<int>& nums) {
        vector<int> dp(500);
        vector<int> dp_2(500);
        if(nums.size()){
        if(nums.size()==1) return nums[0];
        if(nums.size()==2) return max(nums[0],nums[1]);
        dp[0] = nums[0];
        dp[1] = nums[0]>nums[1]?nums[0]:nums[1];
        dp_2[1] = nums[1];
        dp_2[2] = nums[1]>nums[2]?nums[1]:nums[2];
        for(size_t i=2;i<nums.size()-1;i++){
        	dp[i] = max(dp[i-1],nums[i]+dp[i-2]);
        }
        for(size_t i=3;i<nums.size();i++){
            dp_2[i] = max(dp_2[i-1],nums[i]+dp_2[i-2]);
        }
        size_t m=nums.size()-1;
        return max(dp[m-1],dp_2[m]);
        }else return 0;
    }
};
